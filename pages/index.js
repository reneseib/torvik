import React, { useState, useEffect } from 'react';
import Head from 'next/head'
import styles from '../styles/Home.module.scss'

import DropDown from '../components/DropDown';
import CheckBox from '../components/CheckBox';

export default function Home() {

  const [selectValue, setSelectValue] = useState("")
  const [formValues, setFormValues] = useState(
    { wasteReduction: false, foodSharing: true, tooGoodToGo: true, wasteReductionInput: '', sector: 'gastro' }
  );
  const [result, setResult] = useState(null)


  const handleFormChange = (e) => {
    e.preventDefault();

    let name = e.currentTarget.name;
    let type = e.currentTarget.type;

    var value = null;

    if (type === 'text') {
      if (formValues?.wasteReduction === true && formValues) {
        value = e.currentTarget.value;
      } else {
        value = "";
      }
    }

    if (type === 'submit') {
      value = e.currentTarget.value;
    }

    if (type === 'select-one') {
      value = e.currentTarget.value;
      formValues.sector = value;
    }

    if (type === 'checkbox') {
      value = e.currentTarget.checked;
      if (name === 'wasteReduction' && value === false && formValues?.wasteReductionInput !== "") {
        formValues.wasteReductionInput = "";
      }
    }

    setFormValues({
      ...formValues,
      [name]: value
    })
  }

  const submitForm = async () => {
    let resp = await fetch("api/v1/form", {
      method: 'POST', // *GET, POST, PUT, DELETE, etc.
      mode: 'cors', // no-cors, *cors, same-origin
      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
      credentials: 'same-origin', // include, *same-origin, omit
      headers: {
        'Content-Type': 'application/json'
        // 'Content-Type': 'application/x-www-form-urlencoded',
      },
      body: JSON.stringify({ "sector": selectValue, ...formValues }) // body data type must match "Content-Type" header
    })
    return resp
  }

  const handleSubmit = async () => {
    let resp = await submitForm()
    let json = await resp.json();
    if (resp.status === 200) {
      setResult(json.result);
    }
  }



  useEffect(() => {
    console.log(formValues)
  }, [formValues, selectValue, result]);

  return (
    <>
      <Head>
        <title>Torvik Gruen - CO2 Rechner</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.container}>
          <form className={styles.form}>
            <DropDown stateControl={[selectValue, setSelectValue]} />

            <div className={styles.formContent}>
              <h2>{selectValue.text}</h2>
              <div className={styles.checkBoxWrapper}>
                <div className={styles.checkBoxContainer}>
                  <div style={{ marginTop: "2em", display: "flex", flexDirection: "row", alignItems: "flex-start" }}>

                    <CheckBox
                      name="wasteReduction"
                      value="wasteReduction"
                      state={formValues}
                      stateSetter={handleFormChange}
                    />
                    <div style={{ padding: "0 0 0 1em" }}>
                      <h4>Müllvermeidung</h4>
                      <p>Wenn der Mieter im Programm "Food Sharing" teilnehmen kann.</p>
                    </div>
                    {/* <div className={`${styles.additionalInput} ${formValues.wasteReduction ? (styles.isActive) : ("")}`}>
                      <input
                        type="text"
                        name="wasteReductionInput"
                        placeholder="X"
                        style={{
                          marginRight: "1em",
                        }}
                        value={formValues?.wasteReductionInput}
                        disabled={formValues?.wasteReduction ? (false) : (true)}
                        onChange={handleFormChange}
                      /> kg/Tag
                    </div> */}


                  </div>

                </div>
                <div style={{ marginTop: "2em", display: "flex", flexDirection: "row", alignItems: "flex-start" }}>
                  <CheckBox
                    name="foodSharing"
                    value="foodSharing"
                    state={formValues}
                    stateSetter={handleFormChange}
                  />
                  <div style={{ padding: "0 0 0 1em" }}>
                    <h4>Food Sharing</h4>
                    <p>Wenn der Mieter im Programm "Food Sharing" teilnehmen kann.</p>
                  </div>
                </div>
                <div style={{ marginTop: "2em", display: "flex", flexDirection: "row", alignItems: "flex-start" }}>
                  <CheckBox
                    name="tooGoodToGo"
                    value="tooGoodToGo"
                    state={formValues} stateSetter={handleFormChange} />
                  <div style={{ padding: "0 0 0 1em" }}>
                    <h4>Too good to go</h4>
                    <p>Wenn der Mieter im Programm "Too good to go" teilnehmen kann.</p>
                  </div>
                </div>
              </div>
            </div>
            <div style={{ marginTop: "2em" }}>
              <button className={"btn"} onClick={handleSubmit} action="">
                <div className={"btnContent"}>
                  CO2 Einsparung kalkulieren
                </div>
              </button>
            </div>
          </form>
          {
            result !== null ? (
              <div className={styles.resultContainer}>
                Die Maßnahmen ergeben eine CO2 Einsparung von: {result} kg pro Jahr
              </div>
            ) : (null)
          }

        </div>

      </main>
    </>
  )
}
